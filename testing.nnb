{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "let brandCode = \"N\"\r\n\r\nlet brands = [\r\n    {\r\n      code: \"CK\",\r\n      name: \"Calvin Klein\",\r\n      category: \"Fashion\"\r\n    },\r\n    {\r\n      code: \"LE\",\r\n      name: \"Lego\",\r\n      category: \"Toy\"\r\n    },\r\n    {\r\n      code: \"NI\",\r\n      name: \"Nike\",\r\n      category: \"Athleticwear\"\r\n    }\r\n  ];\r\n\r\n  let foundRecord = null;\r\n  for (let t of brands) {\r\n    if (t.code === brandCode) {\r\n      foundRecord = t;\r\n    }\r\n  };\r\n  \r\n  // let itemFound = false;\r\n  // if (foundRecord.code === brandCode){\r\n  //     itemFound = true;\r\n  // }\r\n\r\n  if (foundRecord) {\r\n    console.log(foundRecord)\r\n  }else{\r\n    console.log(\"Task is not found\");\r\n  }\r\n\r\n\r\n\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Task is not found",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "// TEST FUNCTIONS HERE\r\n\r\n// write code here to test your `add` function\r\naddDelivery(delivery, brands, \"CK10006\", \"Buana Vista\", 3);\r\nconsole.log(\"---- after adding data----\");\r\nconsole.log(delivery);\r\n\r\n// write code here to test your `update` function\r\nupdateDelivery(delivery, 100001, \"Jurong West\", 1);\r\nconsole.log(\"---- after modified delivery address with id 100001  ---\");\r\nconsole.log(delivery);\r\n\r\n// write code here to test your `delete` function\r\ndeleteDelivery(delivery, 100001);\r\n\r\nconsole.log(\"--- after deleting delivery data with id 100001\");\r\nconsole.log(delivery);"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "  // const index = delivery.findIndex(function (t) {\r\n  //   return t.id === id;\r\n  // });\r\n  // delivery.splice(index, 1);"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "itemcode.slice(0,2)\r\nelse {\r\n    foundRecord = \"Can't find\";\r\n}"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "let toDay = {\r\n    year: new Date().getFullYear(),\r\n    month: new Date().getMonth() + 1,\r\n    day: new Date().getDate(),\r\n  };\r\n  console.log(toDay.day)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "31",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "let brands = [\r\n    {\r\n      code: \"CK\",\r\n      name: \"Calvin Klein\",\r\n      category: \"Fashion\"\r\n    },\r\n    {\r\n      code: \"LE\",\r\n      name: \"Lego\",\r\n      category: \"Toy\"\r\n    },\r\n\r\n  ]\r\n\r\n  let newlist = {\r\n    code: \"code\",\r\n    name: \"name\",\r\n    category: \"category\",\r\n  }\r\n\r\n\r\n  brands.push(newlist);\r\n\r\nconsole.log(brands)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  { code: 'CK', name: 'Calvin Klein', category: 'Fashion' },",
                                "  { code: 'LE', name: 'Lego', category: 'Toy' },",
                                "  { code: 'code', name: 'name', category: 'category' }",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}